const { Client, CommandInteraction } = require("discord.js");
const User = require('../../user.js');
const Guild = require('../../guild.js');
let strftime = require("strftime")
const { MessageEmbed, InteractionWebhook } = require("discord.js");
const { stripIndents } = require('common-tags');
module.exports = {
    name: "userinfo",
    description: "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    type: 'CHAT_INPUT',
    options: [
        {
            name: "user",
            description: "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            type: 6,
            required: false,
        },
    ],
    /**
     *
     * @param {Client} client
     * @param {CommandInteraction} interaction
     * @param {String[]} args
     */
    run: async (client, interaction, args) => {
      //await interaction.deferReply({ephemeral:false}).catch(() => {});
        
        let m = interaction.options.getUser("user");
        let a;
        if (m == null) a = 1;
        let user = interaction.guild.members.cache.get(interaction.user.id)
         if (m) user = interaction.guild.members.cache.get(m.id) 
       const roles = user.roles.cache.sort((a, b) => b.position - a.position).map(role => role.toString())
         let status;
         switch (user.presence.status) {
         case 'online':
             status = 'üü¢ –í —Å–µ—Ç–∏';
             break;
         case 'dnd':
             status = 'üî¥ –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å';
             break;
         case 'idle':
             status = 'üåô –ù–µ–∞–∫—Ç–∏–≤–µ–Ω';
             break;
         case 'offline':
             status = '<:onl4:807613789708484639> –ù–µ –≤ —Å–µ—Ç–∏';
             break;
         default:
             status = '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
         }
       let flagss = user.user.flags, markss = ''
       if(flagss.has('EARLY_VERIFIED_BOT_DEVELOPER')) markss += `<a:vfdev:762273409773207582>`
       if(flagss.has('HOUSE_BRILLIANCE')) markss += `<:bril:762272675506683914> `
       if(flagss.has('HOUSE_BRAVERY')) markss += `<:br:762272645013831690>`
       if(flagss.has('HOUSE_BALANCE')) markss += `<:balance:762272692430045214> `
       if(flagss.has('BUGHUNTER_LEVEL_1')) markss += `<:bug:762272662205759499>  `
       if(flagss.has('PARTNERED_SERVER_OWNER')) markss += `<:pathner:762272713263153162> `
       if(flagss.has('EARLY_SUPPORTER')) markss += `<:early:767729925582618665>`
       if(flagss.has('DISCORD_CERTIFIED_MODERATOR')) markss += `<:emoji_89:940563474575151164>`
       if(flagss.has('VERIFIED_BOT')) markss += `<:DiscordVerifiedBot:947200532781600863>`
       if(flagss.has('HYPESQUAD_EVENTS')) markss += `<:hype_squad_badge:947201047665995847>`
       let day = 1000 * 60 * 60 * 24;
       let date1 = new Date(interaction.createdTimestamp);
       let date2 = new Date(user.user.createdAt);
       let diff1 = Math.round(Math.abs((date1.getTime() - date2.getTime()) / day)); //new Date(user.user.createdAt))} (${diff1} –¥–Ω–µ–π –Ω–∞–∑–∞–¥)
       let dayy = 1000 * 60 * 60 * 24
       let date11 = new Date(interaction.createdTimestamp)
       let date22 = new Date(user.joinedAt)
       let diff11 = Math.round(Math.abs((date11.getTime() - date22.getTime()) / dayy))
     
       const devices = {
         desktop: '–ö–æ–º–ø—å—é—Ç–µ—Ä',
         web: '–ë—Ä–∞—É–∑–µ—Ä',
         mobile: '–¢–µ–ª–µ—Ñ–æ–Ω'
         };
         let pr = "";
         for (let device in user.presence.clientStatus) {
         pr += `${devices[device]}`
         };
         if (pr.length > 9) pr = '–ù–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö';
         let st = user.presence.activities[0];
         if (st) st = st.state;
         if (!st) st = "–Ω–µ—Ç"
         let emb = new MessageEmbed()
         .setThumbnail(user.user.avatarURL({ dynamic: true }))
         .setDescription(stripIndents `[–ê–≤–∞—Ç–∞—Ä](${user.user.avatarURL({ dynamic: true })})\n\n**–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - **${st || "–ù–µ—Ç"}\n**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞** - ${strftime('%d.%m.%Y –≤ %H:%M', new Date(user.user.createdAt))} (${diff1} –¥–Ω–µ–π –Ω–∞–∑–∞–¥) \n**–î–∞—Ç–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è** - ${strftime('%d.%m.%Y –≤ %H:%M', new Date(user.joinedAt))} (${diff11} –¥–Ω–µ–π –Ω–∞–∑–∞–¥)`)
         .setColor(user.displayHexColor === "#000000" ? "#ffffff" : user.displayHexColor)
         .setTitle("**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ**")
         .addField("> –ò–º—è",`**\`\`\`${user.user.tag}\`\`\`**`,true)
         .addField(`> ID`,`\`\`\`${user.id}\`\`\``,false)
         .addField(`> –°—Ç–∞—Ç—É—Å `,`\`\`\`${status}\`\`\``,true)
         .addField('> –ó–Ω–∞—á–∫–∏',`${markss || '–ù–µ—Ç'}`,true)
          .addField('> –î–µ–≤–∞–π—Å', `\`\`\`${pr || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}\`\`\``,true)
          .addField(`> –†–æ–ª–∏ [${roles.length - 1 || "–ù–µ—Ç"}]`,`\n${user.roles.cache.filter(r => r.id !== interaction.guild.id).map(roles => `${roles}`).slice(0,20).join(" | ")|| "–ù–µ—Ç"}`,false)
          .setFooter({text:`–ó–∞–ø—Ä–æ—Å–∏–ª: ${interaction.user.username}`,iconURL:interaction.user.avatarURL({dynamic:true})})
           return interaction.followUp({embeds:[emb]});     
        //  let embed = new MessageEmbed()
        //  .setThumbnail(user.user.avatarURL({ dynamic: true }))
        //  embed.setColor(user.displayHexColor === "#000000" ? "#ffffff" : user.displayHexColor)
        //  embed.setTitle('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
        //  embed.setDescription(stripIndents `[–ê–≤–∞—Ç–∞—Ä](${user.user.avatarURL({ dynamic: true })})
        //  **–ò–º—è:** ${argsUser.tag}
        //  **–î–∞—Ç–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É:** ${strftime('%d.%m.%Y –≤ %H:%M', new Date(user.joinedAt))} (${diff11} –¥–Ω–µ–π –Ω–∞–∑–∞–¥)
        //  **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞:** ${strftime('%d.%m.%Y –≤ %H:%M', new Date(user.user.createdAt))} (${diff1} –¥–Ω–µ–π –Ω–∞–∑–∞–¥)
        //  **–î–µ–≤–∞–π—Å:** ${pr}`)
        //    .addField('**ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** ',`${user.id}`,true)
        //    .addField('**–†–æ–ª–∏üé≠**',`–ö–æ–ª-–≤–æ —Ä–æ–ª–µ–π [${roles.length - 1}] ${user.roles.cache.filter(r => r.id !== message.guild.id).map(roles => `${roles}`).slice(0,20).join("|")|| "–ù–µ—Ç"}`,true)
        //    .addField('**–ó–Ω–∞—á–∫–∏**',markss || '–ù–µ—Ç',true)
        //    .setFooter({text:`–ó–∞–ø—Ä–æ—Å–∏–ª: ${interaction.user.id}`,iconURL:interaction.user.avatarURL({dynamic:true})})
        //    return interaction.followUp({embeds:[embed]});     
    }
};

